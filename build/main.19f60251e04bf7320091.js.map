{"version":3,"sources":["webpack:///./refs/refs.js","webpack:///./data/data.js","webpack:///./api/api.js","webpack:///./components/auth/forms/signUpForm.js","webpack:///./components/auth/forms/signInForm.js","webpack:///./components/pages/home.js","webpack:///./index.js"],"names":["refs","signUpForm","document","forms","signInForm","logoutButton","querySelector","loader","errorIn","content","navigation","state","auth","idToken","isAuth","localId","data","users","products","cart","isLoading","error","baseURL","addToDB","async","token","axios","post","console","dir","getFromDB","localStorage","getItem","JSON","parse","log","get","then","response","createSignUpForm","user","email","password","resetUser","reset","innerHTML","addEventListener","e","textContent","name","value","target","preventDefault","classList","toggle","returnSecureToken","message","signUp","createSignInForm","setItem","stringify","Error","signIn","createHome","currentTarget","dataset","page","clear"],"mappings":"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","file":"main.19f60251e04bf7320091.js","sourcesContent":["export const refs = {\n  signUpForm: document.forms.signUpForm,\n  signInForm: document.forms.signInForm,\n  logoutButton: document.querySelector('.logoutButton'),\n  loader: document.querySelector('.loader'),\n  errorIn: document.querySelector('.errorIn'),\n  content: document.querySelector('.content'),\n  navigation: document.querySelector('.list'),\n};\n","export const state = {\n  auth: {\n    idToken: '',\n    isAuth: false,\n    localId: '',\n  },\n  data: {\n    users: [],\n    products: [],\n    cart: [],\n  },\n  isLoading: false,\n  error: \"\"\n};\n","import axios from 'axios';\nimport { state } from '../data/data';\nimport { refs } from '../refs/refs';\n\nconst API_KEY = 'AIzaSyAMdD72P8Xm-i8RlkhfB7TjQfnZz6jGzfY';\nconst signUpURL = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`;\nconst signInURL = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`;\nconst baseURL = 'https://authorization-module-13-default-rtdb.firebaseio.com';\n\nconst signUp = async user => {\n  refs.loader.classList.toggle('loader');\n  try {\n    const response = await axios.post(signUpURL, {\n      ...user,\n      returnSecureToken: true,\n    });\n    const data = { email: response.data.email, localId: response.data.localId };\n    const token = response.data.idToken;\n    addToDB(data, token);\n  } catch (error) {\n    // throw error;\n    state.error = error.response.data.error.message;\n    document.querySelector('.error').textContent =\n      error.response.data.error.message;\n  } finally {\n    refs.loader.classList.toggle('loader');\n  }\n};\n\nconst signIn = async user => {\n  refs.loader.classList.toggle('loader');\n  try {\n    const response = await axios.post(signInURL, {\n      ...user,\n      returnSecureToken: true,\n    });\n    localStorage.setItem('idToken', JSON.stringify(response.data.idToken));\n    getFromDB();\n  } catch (error) {\n    refs.errorIn.textContent = error.response.data.error.message;\n    state.error = error.response.data.error.message;\n    throw new Error(state.error);\n  } finally {\n    refs.loader.classList.toggle('loader');\n  }\n};\n\nconst logOut = () => {\n  localStorage.clear();\n};\n\nconst addToDB = async (data, token) => {\n  try {\n    await axios.post(`${baseURL}/users.json?auth=${token}`, data);\n  } catch (error) {\n    console.dir(error);\n  }\n};\n\nconst getFromDB = () => {\n  if (localStorage.getItem('idToken')) {\n    const token = JSON.parse(localStorage.getItem('idToken'));\n    console.log('token', token);\n    axios\n      .get(`${baseURL}/users.json?auth=${token}`)\n      .then(response => console.log(response.data));\n  } else console.log('no token');\n};\n\n// const setToDB =() => {\n//   const token = JSON.parse(localStorage.getItem('idToken'));\n//   axios.post(`${baseURL}/users.json?auth=${token}`, {email: \"test\", password: \"test\"})\n// }\n\nexport { signUp, signIn, addToDB, getFromDB, logOut };\n","import { refs } from '../../../refs/refs';\nimport { signUp } from '../../../api/api';\nimport { state } from '../../../data/data';\nexport const createSignUpForm = () => {\n  const user = {\n    email: '',\n    password: '',\n  };\n\n  const resetUser = () => {\n    user.email = '';\n    user.password = '';\n    refs.signUpForm.reset();\n  };\n  refs.content.innerHTML = `<h2>Sign Up Form</h2>\n        <form name=\"signUpForm\">\n          <input type=\"text\" name=\"email\" />\n          <input type=\"text\" name=\"password\" />\n          <span class=\"error\"></span>\n          <button type=\"submit\">SignUp</button>\n        </form>`;\n  refs.signUpForm = document.forms.signUpForm;\n  const getUserData = e => {\n    if (state.error) {\n      document.querySelector('.error').textContent = '';\n      refs.errorIn.textContent = '';\n      state.error = '';\n    }\n    const { name, value } = e.target;\n    user[name] = value;\n  };\n  const signUpData = e => {\n    e.preventDefault();\n    signUp(user).then(resetUser);\n  };\n  refs.signUpForm.addEventListener('input', getUserData);\n  refs.signUpForm.addEventListener('submit', signUpData);\n};\n","import { refs } from '../../../refs/refs';\nimport { signIn } from '../../../api/api';\nimport { state } from '../../../data/data';\nexport const createSignInForm = () => {\n  const user = {\n    email: '',\n    password: '',\n  };\n\n  const resetUser = () => {\n    user.email = '';\n    user.password = '';\n    refs.signInForm.reset();\n  };\n  refs.content.innerHTML = `<h2>Sign In Form</h2>\n    <form name=\"signInForm\">\n      <input type=\"text\" name=\"email\" />\n      <input type=\"text\" name=\"password\" />\n      <span class=\"errorIn\"></span>\n      <button type=\"submit\">SignIn</button>\n    </form>`;\n  refs.signInForm = document.forms.signInForm;\n  const getUserData = e => {\n    if (state.error) {\n      document.querySelector('.error').textContent = '';\n      refs.errorIn.textContent = '';\n      state.error = '';\n    }\n    const { name, value } = e.target;\n    user[name] = value;\n  };\n  const signInData = async e => {\n    e.preventDefault();\n    signIn(user)\n      .then(resetUser)\n      .then(() => {\n        refs.navigation\n          .querySelector('[data-page=\"signUp\"]')\n          .classList.toggle('hidden');\n        refs.navigation\n          .querySelector('[data-page=\"signIn\"]')\n          .classList.toggle('hidden');\n        refs.navigation\n          .querySelector('[data-page=\"logOut\"]')\n          .classList.toggle('hidden');\n      });\n  };\n  refs.signInForm.addEventListener('input', getUserData);\n  refs.signInForm.addEventListener('submit', signInData);\n};\n","import { refs } from '../../refs/refs';\nexport const createHome = () => {\n  refs.content.innerHTML = `<h2>Homepage</h2>`;\n};\n","import { refs } from './refs/refs';\nimport { signUp, signIn, logOut } from './api/api';\nimport './styles.css';\nimport { state } from './data/data';\nimport { createSignUpForm } from './components/auth/forms/signUpForm';\nimport { createSignInForm } from './components/auth/forms/signInForm';\nimport { createHome } from './components/pages/home';\ncreateHome();\nconst getPage = e => {\n  if (e.target === e.currentTarget) {\n    return;\n  }\n  switch (e.target.dataset.page) {\n    case 'signUp':\n      createSignUpForm();\n      break;\n    case 'signIn':\n      createSignInForm();\n      break;\n    case 'home':\n      createHome();\n      break;\n    case 'logOut':\n      createHome();\n      break;\n    default:\n      createHome();\n      break;\n  }\n\n  // if (e.target.dataset.page === 'signUp') {\n  //   createSignUpForm();\n  // }\n  // if (e.target.dataset.page === 'signIn') {\n  //   createSignInForm();\n  // }\n};\n\nrefs.navigation.addEventListener('click', getPage);\n// const getUserData = e => {\n//   if (state.error) {\n//     document.querySelector('.error').textContent = '';\n//     refs.errorIn.textContent = '';\n//     state.error = '';\n//   }\n//   const { name, value } = e.target;\n//   user[name] = value;\n// };\n\n// const signUpData = e => {\n//   e.preventDefault();\n//   signUp(user).then(resetUser);\n// };\n\n// const signInData = async e => {\n//   e.preventDefault();\n//   signIn(user).then(resetUser);\n// };\n\n// __signUpForm\n\n// __signInForm\n\n// __logout\nconst logOutHandler = () => {\n  logOut();\n  refs.navigation\n    .querySelector('[data-page=\"signUp\"]')\n    .classList.toggle('hidden');\n  refs.navigation\n    .querySelector('[data-page=\"signIn\"]')\n    .classList.toggle('hidden');\n  refs.navigation\n    .querySelector('[data-page=\"logOut\"]')\n    .classList.toggle('hidden');\n};\nrefs.navigation\n  .querySelector('[data-page=\"logOut\"]')\n  .addEventListener('click', logOutHandler);\n"],"sourceRoot":""}